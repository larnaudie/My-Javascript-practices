{"version":3,"file":"main.js","sourceRoot":"","sources":["../src/main.ts"],"names":[],"mappings":"AAAA,OAAO,EAAO,GAAG,EAAE,aAAa,EAAE,OAAO,EAAE,MAAM,UAAU,CAAC;AAM5D,OAAO,CAAC,MAAM,CAAC,2BAA2B,EAAE,CAAC,MAAM,EAAE,QAAgB,EAAE,GAAG,IAAe,EAAE,EAAE;IAC3F,MAAM,WAAW,GAAG,OAAO,CAAC,QAAgC,CAAC,CAAC;IAC9D,IAAI,OAAO,WAAW,KAAK,UAAU,EAAE;QACrC,OAAQ,WAAmC,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;KAClE;IACD,OAAO,WAAW,CAAC;AACrB,CAAC,CAAC,CAAC;AAEH,OAAO,CAAC,MAAM,CAAC,mBAAmB,EAAE,CAAC,MAAM,EAAE,QAAgB,EAAE,GAAG,IAAe,EAAE,EAAE;IACnF,MAAM,OAAO,GAAG,GAAG,CAAC,QAAqB,CAAC,CAAC;IAC3C,IAAI,OAAO,OAAO,KAAK,UAAU,EAAE;QACjC,OAAQ,OAAuB,CAAC,KAAK,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;KAClD;IACD,OAAO,OAAO,CAAC;AACjB,CAAC,CAAC,CAAC;AAEH,OAAO,CAAC,MAAM,CAAC,6BAA6B,EAAE,CAAC,KAAK,EAAE,QAAgB,EAAE,GAAG,IAAe,EAAE,EAAE;IAC5F,MAAM,aAAa,GAAG,aAAa,CAAC,eAAe,CAAC,KAAK,CAAC,MAAM,CAAkB,CAAC;IACnF,MAAM,iBAAiB,GAAG,aAAa,CAAC,QAA+B,CAAC,CAAC;IACzE,IAAI,OAAO,iBAAiB,KAAK,UAAU,EAAE;QAC3C,OAAQ,iBAA2C,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;KAChF;IACD,OAAO,iBAAiB,CAAC;AAC3B,CAAC,CAAC,CAAC","sourcesContent":["import { App, app, BrowserWindow, ipcMain } from 'electron';\n\ntype AppFunction = (this: App, ...args: unknown[]) => unknown;\ntype MainProcessFunction = (this: NodeJS.Process, ...args: unknown[]) => unknown;\ntype BrowserWindowFunction = (this: BrowserWindow, ...args: unknown[]) => unknown;\n\nipcMain.handle('wdio-electron.mainProcess', (_event, funcName: string, ...args: unknown[]) => {\n  const processProp = process[funcName as keyof NodeJS.Process];\n  if (typeof processProp === 'function') {\n    return (processProp as MainProcessFunction).apply(process, args);\n  }\n  return processProp;\n});\n\nipcMain.handle('wdio-electron.app', (_event, funcName: string, ...args: unknown[]) => {\n  const appProp = app[funcName as keyof App];\n  if (typeof appProp === 'function') {\n    return (appProp as AppFunction).apply(app, args);\n  }\n  return appProp;\n});\n\nipcMain.handle('wdio-electron.browserWindow', (event, funcName: string, ...args: unknown[]) => {\n  const browserWindow = BrowserWindow.fromWebContents(event.sender) as BrowserWindow;\n  const browserWindowProp = browserWindow[funcName as keyof BrowserWindow];\n  if (typeof browserWindowProp === 'function') {\n    return (browserWindowProp as BrowserWindowFunction).apply(browserWindow, args);\n  }\n  return browserWindowProp;\n});\n"]}